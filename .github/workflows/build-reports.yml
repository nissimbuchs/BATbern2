name: Build Test & Quality Reports

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
  workflow_dispatch:

jobs:
  build-reports:
    name: Generate Test & Quality Dashboard
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/projectdoc/package-lock.json

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: build-artifacts
          run-id: ${{ github.event.workflow_run.id }}
        continue-on-error: true

      - name: Restore build reports from workspace
        run: |
          echo "Collecting test reports from workspace..."
          mkdir -p report-collection

          # Collect Java test results
          find . -path "*/build/test-results/**/*.xml" -type f \
            -exec cp --parents {} report-collection/ \; 2>/dev/null || true

          # Collect Java coverage reports
          find . -path "*/build/reports/jacoco/test/*.xml" -type f \
            -exec cp --parents {} report-collection/ \; 2>/dev/null || true

          # Collect Checkstyle reports
          find . -path "*/build/reports/checkstyle/*.xml" -type f \
            -exec cp --parents {} report-collection/ \; 2>/dev/null || true

          # Collect frontend coverage
          if [ -d "web-frontend/coverage" ]; then
            cp -r web-frontend/coverage report-collection/ || true
          fi

          # Collect Playwright reports
          if [ -d "web-frontend/playwright-report" ]; then
            cp -r web-frontend/playwright-report report-collection/ || true
          fi

          # Collect security scans
          if [ -f "trivy-results.sarif" ]; then
            cp trivy-results.sarif report-collection/ || true
          fi

          echo "Report collection completed."
          find report-collection -type f | head -20

      - name: Install projectdoc dependencies
        working-directory: apps/projectdoc
        run: npm ci

      - name: Build test & quality reports
        working-directory: apps/projectdoc
        run: npm run build:reports
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_SHA: ${{ github.sha }}
          CI: true

      - name: Build documentation site (with reports)
        working-directory: apps/projectdoc
        run: npm run build

      - name: Upload reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-quality-reports
          path: apps/projectdoc/dist/reports/
          retention-days: 30

      - name: Upload full documentation site
        uses: actions/upload-artifact@v4
        with:
          name: projectdoc-site
          path: apps/projectdoc/dist/
          retention-days: 7

      - name: Deploy to S3 (if on main/develop)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        working-directory: apps/projectdoc
        run: npm run deploy
        env:
          AWS_PROFILE: batbern-mgmt
          AWS_REGION: eu-central-1
          S3_BUCKET_NAME: project.batbern.ch

      - name: Create PR comment with report summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summaryPath = 'apps/projectdoc/dist/reports/data/summary.json';

            if (fs.existsSync(summaryPath)) {
              const summary = JSON.parse(fs.readFileSync(summaryPath, 'utf8'));

              const healthIcon = {
                'passing': '‚úÖ',
                'warning': '‚ö†Ô∏è',
                'failing': '‚ùå'
              }[summary.summary.healthStatus] || '‚ùì';

              const comment = `
            ## ${healthIcon} Test & Quality Report

            **Build Health:** ${summary.summary.healthStatus}

            ### Summary
            - **Tests:** ${summary.summary.tests.passed}/${summary.summary.tests.total} passed (${summary.summary.tests.successRate}%)
            - **Coverage:** ${summary.summary.coverage.overall}% (Target: ${summary.summary.coverage.target}%)
            - **Security Issues:** ${summary.summary.security.totalIssues} (Critical: ${summary.summary.security.critical}, High: ${summary.summary.security.high})
            - **Quality Violations:** ${summary.summary.quality.totalViolations} (Errors: ${summary.summary.quality.errors}, Warnings: ${summary.summary.quality.warnings})

            üìä [View Full Report](https://project.batbern.ch/reports/) (available after deployment)
              `;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

      - name: Fail if health status is failing
        working-directory: apps/projectdoc
        run: |
          if [ -f "dist/reports/data/summary.json" ]; then
            health_status=$(jq -r '.summary.healthStatus' dist/reports/data/summary.json)
            echo "Health status: $health_status"

            if [ "$health_status" = "failing" ]; then
              echo "‚ùå Build health status is FAILING"
              echo "View the reports for details."
              exit 1
            fi
          fi
