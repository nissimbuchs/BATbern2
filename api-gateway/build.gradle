plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ch.batbern'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Core
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // AWS SDK for Cognito and SES
    implementation platform('software.amazon.awssdk:bom:2.28.0')
    implementation 'software.amazon.awssdk:cognitoidentityprovider'
    implementation 'software.amazon.awssdk:ses'
    implementation 'software.amazon.awssdk:auth'

    // JWT Processing
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'com.auth0:jwks-rsa:0.22.1'

    // Jackson for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'

    // OpenAPI Support
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Monitoring & Logging
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    // CloudWatch Logging
    implementation 'software.amazon.awssdk:cloudwatchlogs'
    implementation 'ca.pjer:logback-awslogs-appender:1.6.0'

    // Shared Kernel Dependency
    implementation project(':shared-kernel')

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Testing Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.testcontainers:testcontainers:1.19.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'org.testcontainers:localstack:1.19.3'
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
    }
}

// Configure JaCoCo for code coverage
apply plugin: 'jacoco'

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
    }
}

jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

test.finalizedBy jacocoTestReport

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                // Use 60% threshold for incremental development
                // TODO: Restore to 0.90 once coverage is improved
                minimum = 0.60
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

tasks.named('bootRun') {
    systemProperty 'spring.profiles.active', 'local'
}