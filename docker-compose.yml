services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.dev
    container_name: batbern-api-gateway
    ports:
      - "${API_GATEWAY_PORT:-8080}:8080"
    working_dir: /workspace
    environment:
      # Spring Configuration
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-local}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}

      # Application Configuration
      - APP_ENVIRONMENT=development

      # AWS Configuration
      - AWS_REGION=${AWS_REGION:-eu-central-1}

      # Database Configuration (AWS RDS)
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DATABASE_URL=${DATABASE_URL}

      # Cognito Configuration (AWS)
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
      - COGNITO_CLIENT_ID=${COGNITO_CLIENT_ID}

      # Feature Flags
      - ENABLE_COGNITO_AUTH=${ENABLE_COGNITO_AUTH:-true}
    volumes:
      - .:/workspace
      - gradle-cache:/root/.gradle
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - batbern-network

  web-frontend:
    build:
      context: ./web-frontend
      dockerfile: Dockerfile.dev
    container_name: batbern-frontend
    ports:
      - "3000:3000"
    environment:
      # NO VITE_ variables needed!
      # Frontend loads runtime config from http://localhost:8080/api/v1/config
      # This enables "build once, deploy everywhere"
      - NODE_ENV=development
    volumes:
      - ./web-frontend:/app
      - /app/node_modules
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - batbern-network

volumes:
  gradle-cache:
    driver: local

networks:
  batbern-network:
    driver: bridge
