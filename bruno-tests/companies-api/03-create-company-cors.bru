meta {
  name: Create Company (POST with CORS headers)
  type: http
  seq: 3
}

post {
  url: {{baseUrl}}/companies
  body: json
  auth: bearer
}

auth:bearer {
  token: {{authToken}}
}

headers {
  X-Correlation-ID: {{$guid}}
  Accept-Language: de-CH
  Accept: application/json
  Content-Type: application/json
}

body:json {
  {
    "name": "Test Company AG",
    "displayName": "Test Company",
    "industry": "Technology",
    "website": "https://test-company.ch",
    "description": "Test company for API validation"
  }
}

assert {
  res.status: in [201, 400, 401, 403, 409]
}

tests {
  test("should handle POST request with all custom headers", function() {
    const status = res.getStatus();
    // Any of these statuses means headers were accepted
    // 201 = created
    // 400 = validation error
    // 401 = unauthorized
    // 403 = forbidden
    // 409 = conflict (duplicate)
    expect([201, 400, 401, 403, 409]).to.include(status);
  });

  test("should not have CORS error", function() {
    // CORS errors would prevent the request from reaching the backend
    // Any HTTP status code means CORS is working
    expect(res.getStatus()).to.be.a('number');
  });

  if (res.getStatus() === 201) {
    test("should return created company", function() {
      const body = res.getBody();
      expect(body).to.be.an('object');
      expect(body.id).to.exist;
      expect(body.name).to.equal('Test Company AG');
    });
  }
}
